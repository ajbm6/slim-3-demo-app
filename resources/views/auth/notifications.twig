{% extends 'templates/layout.twig' %}

{% block content %}
<div class="container" id="notification-container">
    <div class="col-lg-12">
        <div class="page-header">
            <h1>Notifications</h1>
        </div>
        <div class="row">
            <div class="col-md-4">
                <div class="well">
                    <ul class="nav nav-pills nav-stacked" role="tablist">
                        <li role="presentation" class="active">
                            <a href="#new" aria-controls="new" role="tab" data-toggle="tab">Unread
                                <span v-if="unread > 0" class="badge">{% raw %}{{ unread }}{% endraw %}</span></a>

                        </li>
                        <li role="presentation"><a href="#old" aria-controls="old" role="tab" data-toggle="tab">Read</a></li>
                    </ul>
                </div>
            </div>
            <div class="col-md-8">
                <div class="tab-content">
                    <div role="tabpanel" class="tab-pane fade in active" id="new">
                        <p>
                            <h2>New Notifications</h2>
                            <hr>
                            <div>
                                <p v-if="!newNotifications.length">
                                    <i>No new notifications...</i>
                                </p>
                                <div class="notifications" v-if="newNotifications.length">
                                    <div class="notification" v-for="notification in newNotifications" track-by="id" transition="expand">
                                        <div class="well well-sm">
                                            {% raw %}
                                                <p>
                                                    <span class="pull-left text-danger" v-if="notification.urgent"><strong>{{ notification.message }}</strong></span>
                                                    <span class="pull-left" v-else>{{ notification.message }}</span>
                                                    <span class="pull-right" id="mark" data-nid="notification.id" v-on:click="markAsRead(notification.id)"><i class="fa fa-eye"></i></span>
                                                </p>
                                                <div class="clearfix"></div>
                                            {% endraw %}
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </p>
                    </div>
                    <div role="tabpanel" class="tab-pane fade" id="old">
                        <div class="well">
                            <p>
                                <h2>Old Notifications</h2>
                                <hr>
                                <div class="notifications">
                                    <i>No old notifications.</i>
                                </div>
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}
{% block scripts %}
    <script type="text/javascript">
        $(function(){
            var hash = window.location.hash;
            hash && $('ul.nav a[href="' + hash + '"]').tab('show');
            $('.nav-tabs a').click(function (e) {
                $(this).tab('show');
                var scrollmem = $('body').scrollTop();
                window.location.hash = this.hash;
                $('html,body').scrollTop(scrollmem);
            });
        });
    </script>
    <script type="text/javascript">
        new Vue({
            el: "#notification-container",
            data: {
                newNotifications: [],
                oldNotifications: [],
                total: 0,
                unread: 0
            },
            methods: {
                getNotifications: function() {
                    $.ajax({
                        url: "http://127.0.0.1/demoapp/public/api/notifications",
                        dataType: "json",
                        type: "GET"
                    }).success(function (data) {
                        console.log(data);
                      this.newNotifications = data.notifications.new;
                      this.oldNotifications = data.notifications.old;
                      this.total = data.total;
                      this.unread = data.unread;
                    }.bind(this));
                },
                markAsRead: function(id) {
                    $.ajax({
                        url: "http://127.0.0.1/demoapp/public/api/notifications",
                        data: {
                            "csrf_name": "{{ csrf_name }}",
                            "csrf_value": "{{ csrf_token }}",
                            "id": id
                        },
                        dataType: "json",
                        type: "POST"
                    }).success(function(data) {
                        console.log(data);
                        noty({
                            layout: "topRight",
                            theme: "relax",
                            type: "success",
                            text: data.message,
                            timeout: 5000,
                            buttons: false,
                            animation: {
                                open: 'animated bounceInLeft',
                                close: 'animated bounceOutRight'
                            },
                            callback: {
                                afterClose: function() {
                                    reload(100);
                                },
                                onClickClose: function() {
                                    reload(100);
                                }
                            }
                        });

                        this.getNotifications();
                    }.bind(this)).error(function(data) {
                        console.log(data);
                        noty({
                            layout: "topRight",
                            theme: "relax",
                            type: "error",
                            text: data.message,
                            timeout: 5000,
                            buttons: false,
                            animation: {
                                open: 'animated bounceInLeft',
                                close: 'animated bounceOutRight'
                            },
                            callback: {
                                afterClose: function() {
                                    reload(100);
                                },
                                onClickClose: function() {
                                    reload(100);
                                }
                            }
                        });
                    });
                }
            },
            ready: function() {
                this.getNotifications();

                setInterval(function() {
                    console.log("Check for new notifications...");
                    this.getNotifications();
                }.bind(this), 10000);
            }
        });

    </script>
{% endblock %}
